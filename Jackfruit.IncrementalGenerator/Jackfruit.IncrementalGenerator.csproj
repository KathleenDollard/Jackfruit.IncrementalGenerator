<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFramework>netstandard2.0</TargetFramework>
		<Nullable>enable</Nullable>
		<ImplicitUsings>true</ImplicitUsings>
		<LangVersion>10.0</LangVersion>
		<IsPackable>true</IsPackable>

		<!-- NU5128 is a packaging warning when you don't have lib/ref folders. we're a generator, we're never going to have those. -->
		<NoWarn>$(NoWarn); NU5128</NoWarn>
		<BuildOutputTargetFolder>analyzers/dotnet/cs</BuildOutputTargetFolder>
		<GeneratePackageOnBuild>true</GeneratePackageOnBuild>
		<TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage</TargetsForTfmSpecificBuildOutput>
	</PropertyGroup>

	<!--<ItemGroup>
		<None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
	</ItemGroup>-->

	<ItemGroup>
		<PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="$(MicrosoftCodeAnalysisAnalyzersVersion)" PrivateAssets="all" />
		<PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="$(MicrosoftCodeAnalysisCSharpVersion)" PrivateAssets="all" />
		<PackageReference Include="System.CommandLine" Version="2.0.0-beta4.22272.1" />
	</ItemGroup>

	<!--<ItemGroup Condition="'$(CreatePackage)' == 'true'">
		<PackageReference Include="Jackfruit.Runtime" Version="$(PackageVersion)" />
	</ItemGroup>

	<ItemGroup Condition="'$(CreatePackage)' != 'true'">
		<ProjectReference Include="../Jackfruit.Runtime/Jackfruit.Runtime.csproj" />
	</ItemGroup>-->

	<ItemGroup>
		<ProjectReference Include="../Jackfruit.Runtime/Jackfruit.Runtime.csproj" />
		<ProjectReference Include="../Jackfruit.CodeOutput/Jackfruit.CodeOutput.csproj" PrivateAssets="all" />
		<ProjectReference Include="../Jackfruit.Common/Jackfruit.Common.csproj" PrivateAssets="all" />
	</ItemGroup>

	<Target Name="CopyProjectReferencesToPackage">
		<ItemGroup>
			<_PrivateProjects Include="@(ProjectReference)" Condition="'%(ProjectReference.PrivateAssets)' == 'all'" />
		</ItemGroup>

		<!--
		Build referenced projects when building from the command line.
		-->
		<MSBuild Projects="@(_PrivateProjects)" Targets="%(_PrivateProjects.Targets)" BuildInParallel="$(BuildInParallel)" Properties="%(_PrivateProjects.SetConfiguration); %(_PrivateProjects.SetPlatform);  %(_PrivateProjects.SetTargetFramework)" ContinueOnError="$(ContinueOnError)" RemoveProperties="%(_PrivateProjects.GlobalPropertiesToRemove)$(_GlobalPropertiesToRemoveFromProjectReferences)">

			<Output TaskParameter="TargetOutputs" ItemName="_PrivateProjectsOutputs" />
		</MSBuild>
		<ItemGroup>
			<!-- the dependencies of your MSBuild task must be packaged inside the package, they cannot be expressed as normal PackageReferences -->
			<BuildOutputInPackage Include="@(_PrivateProjectsOutputs)" TargetPath="%(ReferenceCopyLocalPaths.DestinationSubPath)" />
		</ItemGroup>

	</Target>
</Project>
