// This file is created by a generator.
using System;
using System.CommandLine;
using System.CommandLine.Invocation;
using System.CommandLine.Parsing;
using Jackfruit;

namespace DemoHandlers
{
   public partial class CliRoot : GeneratedCommandBase<CliRoot, CliRoot.Result>, ICommandHandler
   {
      public static CliRoot Create(Delegate MethodToRun)
      {
         return Create();
      }
      
      private CliRoot() : base("CliRoot")
      {
      }
      
      public static CliRoot Create()
      {
         var command = new CliRoot();
         command.GreetingArgument = new Argument<string>("greetingArg");
         command.Add(command.GreetingArgument);
         command.PicardOption = new Option<bool>("--Picard");
         command.PicardOption.Description = "This is the description for Picard";
         command.Add(command.PicardOption);
         command.SystemCommandLineCommand.AddValidator(command.Validate);
         command.Handler = command;
         return command;
      }
      
      public class Result
      {
         internal Result(CliRoot command, CommandResult result)
         {
            Greeting = CommandResult.GetValueForArgument(command.GreetingArgument);
            Picard = CommandResult.GetValueForOption(command.PicardOption);
         }
         
          string Greeting {get; set;}
          bool Picard {get; set;}
      }
      
      public override Result GetResult(CommandResult result)
      {
         return new Result(this, result);
      }
      
      public int Invoke(InvocationContext context)
      {
         Handlers.NextGeneration(result.GreetingArgument, result.PicardOption);
         return context.ExitCode;
      }
      
      public Task<int> InvokeAsync(InvocationContext context)
      {
         Handlers.NextGeneration(result.GreetingArgument, result.PicardOption);
         return Task.FromResult(context.ExitCode);
      }
      
      public Argument<string> GreetingArgument {get; set;}
      public Option<bool> PicardOption {get; set;}
   }
   
   public class Commands
   {
   }
   
}
