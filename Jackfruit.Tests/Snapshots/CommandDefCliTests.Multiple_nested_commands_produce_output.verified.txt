
using Jackfruit.Internal;

namespace Jackfruit
{
    /// <summary>
    /// This is the main class for the Jackfruit generator. After you call the 
    /// Create command, the returned RootCommand will contain your CLI. If you 
    /// need multiple root commands in your application differentiate them with &gt;T&lt;
    /// </summary>
    public partial class RootCommand : RootCommand<RootCommand, RootCommand.Result>
    {
            public static RootCommand Create(params SubCommand[] subCommands)
                => new RootCommand();

            public static RootCommand Create(Delegate runHandler, params SubCommand[] subCommands)
                => new RootCommand();

            public static RootCommand Create(Delegate runHandler, Delegate validator, params SubCommand[] subCommands)
                => new RootCommand();

            public partial class Result
            { }
    }
}
// *******************************

/*
//Key:         
//Id:          MyClass.A(int)
//Name:        RootCommand
//Handler:     MyClass.A
//Path:        
//Parent:      
//Description: 
//Aliases:     root-command
//Namespace:   <global namespace>
//Returns:     void
//Members:     
   //Option:
      //Option Id:      i
      //Name:           I
      //TypeName:       int
      //Description:    
      //Aliases:        -i
      //ArgDisplayName: 
      //Required:       False
//SubCommands:     
   //Key:         A
   //Id:          MyClass.B(int)
   //Name:        B
   //Handler:     MyClass.B
   //Path:        A
   //Parent:      RootCommand
   //Description: 
   //Aliases:     b
   //Namespace:   <global namespace>
   //Returns:     void
   //Members:     
      //Option:
         //Option Id:      i
         //Name:           I
         //TypeName:       int
         //Description:    
         //Aliases:        -i
         //ArgDisplayName: 
         //Required:       False
   //SubCommands:     
   //**************************************    
   
   //Key:         A
   //Id:          MyClass.C(int)
   //Name:        C
   //Handler:     MyClass.C
   //Path:        A
   //Parent:      RootCommand
   //Description: 
   //Aliases:     c
   //Namespace:   <global namespace>
   //Returns:     void
   //Members:     
      //Option:
         //Option Id:      i
         //Name:           I
         //TypeName:       int
         //Description:    
         //Aliases:        -i
         //ArgDisplayName: 
         //Required:       False
   //SubCommands:     
      //Key:         AC
      //Id:          MyClass.E(int)
      //Name:        E
      //Handler:     MyClass.E
      //Path:        A.C
      //Parent:      C
      //Description: 
      //Aliases:     e
      //Namespace:   <global namespace>
      //Returns:     void
      //Members:     
         //Option:
            //Option Id:      i
            //Name:           I
            //TypeName:       int
            //Description:    
            //Aliases:        -i
            //ArgDisplayName: 
            //Required:       False
      //SubCommands:     
      //**************************************    
      
      //Key:         AC
      //Id:          MyClass.F(int)
      //Name:        F
      //Handler:     MyClass.F
      //Path:        A.C
      //Parent:      C
      //Description: 
      //Aliases:     f
      //Namespace:   <global namespace>
      //Returns:     void
      //Members:     
         //Option:
            //Option Id:      i
            //Name:           I
            //TypeName:       int
            //Description:    
            //Aliases:        -i
            //ArgDisplayName: 
            //Required:       False
      //SubCommands:     
         //Key:         ACF
         //Id:          MyClass.G(int)
         //Name:        G
         //Handler:     MyClass.G
         //Path:        A.C.F
         //Parent:      F
         //Description: 
         //Aliases:     g
         //Namespace:   <global namespace>
         //Returns:     void
         //Members:     
            //Option:
               //Option Id:      i
               //Name:           I
               //TypeName:       int
               //Description:    
               //Aliases:        -i
               //ArgDisplayName: 
               //Required:       False
         //SubCommands:     
         //**************************************    
         
         //Key:         ACF
         //Id:          MyClass.H(int)
         //Name:        H
         //Handler:     MyClass.H
         //Path:        A.C.F
         //Parent:      F
         //Description: 
         //Aliases:     h
         //Namespace:   <global namespace>
         //Returns:     void
         //Members:     
            //Option:
               //Option Id:      i
               //Name:           I
               //TypeName:       int
               //Description:    
               //Aliases:        -i
               //ArgDisplayName: 
               //Required:       False
         //SubCommands:     
         //**************************************    
         
      //**************************************    
      
   //**************************************    
   
   //Key:         A
   //Id:          MyClass.D(int)
   //Name:        D
   //Handler:     MyClass.D
   //Path:        A
   //Parent:      RootCommand
   //Description: 
   //Aliases:     d
   //Namespace:   <global namespace>
   //Returns:     void
   //Members:     
      //Option:
         //Option Id:      i
         //Name:           I
         //TypeName:       int
         //Description:    
         //Aliases:        -i
         //ArgDisplayName: 
         //Required:       False
   //SubCommands:     
   //**************************************    
   
//**************************************    

*/
